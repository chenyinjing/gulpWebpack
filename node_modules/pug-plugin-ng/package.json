{
  "_args": [
    [
      "pug-plugin-ng@github:tycho01/pug-plugin-ng",
      "/Users/chenyinjing/work/test/gulpWebpack/node_modules/pug-ng-html-loader"
    ]
  ],
  "_from": "tycho01/pug-plugin-ng",
  "_id": "pug-plugin-ng@0.0.2",
  "_inCache": true,
  "_installable": true,
  "_location": "/pug-plugin-ng",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/tycho01/pug-plugin-ng/master/package.json",
      "gitUrl": "git://github.com/tycho01/pug-plugin-ng.git",
      "httpsUrl": "git+https://github.com/tycho01/pug-plugin-ng.git",
      "shortcut": "github:tycho01/pug-plugin-ng",
      "ssh": "git@github.com:tycho01/pug-plugin-ng.git",
      "sshUrl": "git+ssh://git@github.com/tycho01/pug-plugin-ng.git",
      "type": "github"
    },
    "name": "pug-plugin-ng",
    "raw": "pug-plugin-ng@github:tycho01/pug-plugin-ng",
    "rawSpec": "github:tycho01/pug-plugin-ng",
    "scope": null,
    "spec": "github:tycho01/pug-plugin-ng",
    "type": "hosted"
  },
  "_requiredBy": [
    "/pug-ng-html-loader"
  ],
  "_resolved": "git://github.com/tycho01/pug-plugin-ng.git#7398eee1ad54bec68482503e3df8a82e618f7c6d",
  "_shasum": "daab1d97aa395c749a822299d6d4b794cf0b1c07",
  "_shrinkwrap": null,
  "_spec": "pug-plugin-ng@github:tycho01/pug-plugin-ng",
  "_where": "/Users/chenyinjing/work/test/gulpWebpack/node_modules/pug-ng-html-loader",
  "author": {
    "name": "Tycho Grouwstra"
  },
  "bugs": {
    "url": "https://github.com/tycho01/pug-plugin-ng/issues"
  },
  "dependencies": {
    "character-parser": "^2.1.1"
  },
  "description": "A Pug plugin allowing unquoted use of Angular 2's `[(bananabox)]=\"val\"` syntax",
  "devDependencies": {
    "pug": "^2.0.0-beta1"
  },
  "gitHead": "7398eee1ad54bec68482503e3df8a82e618f7c6d",
  "homepage": "https://github.com/tycho01/pug-plugin-ng#readme",
  "keywords": [
    "angular",
    "angular2",
    "jade",
    "ng2",
    "pug"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "pug-plugin-ng",
  "optionalDependencies": {},
  "peerDependencies": {
    "pug": "^2.0.0-beta1"
  },
  "readme": "# pug-plugin-ng\n\nA Pug plugin allowing unquoted use of Angular 2's `[(bananabox)]=\"val\"` syntax.\n\n## What it does:\n\nAllow you to go from this:\n```\n<button id=\"foo\" class=\"bar\" #myVar md-raised-button [disabled]=\"isDisabled\" (click)=\"boom\">text</button>\n```\n\nOr these:\n```\nbutton#foo.bar(#myVar='' md-raised-button='' '[disabled]'=\"isDisabled\" '(click)'=\"boom\") text\nbutton#foo.bar(#myVar='', md-raised-button='', [disabled]=\"isDisabled\", (click)=\"boom\") text\n```\n\nTo this:\n```\nbutton#foo.bar(#myVar md-raised-button [disabled]=\"isDisabled\" (click)=\"boom\") text\n```\n\nThe idea: allow your Pug to get terser and closer to the HTML, allowing you to use HTML snippets found online in Pug with less effort.\n\n## How it works:\n\nIt does this by patching `pug-lexer`'s `attrs` function to allow use of Angular 2 `[property]` / `(event)` bindings without [additional commas/quotes](https://pugjs.org/language/attributes.html#quoted-attributes).\n\nWhile you're at it, you may also want to set the `doctype` to `html` in Pug's options to allow [attributes with implicit values](https://pugjs.org/language/attributes.html#boolean-attributes) (e.g. Angular 1/2 directives not taking parameters as commonly used in Material2/Ionic2, as well as `#template_variables`). Otherwise, `#myVar` would need to become `#myVar=''`; similarly directives like `md-raised-button` would need to become `md-raised-button=''`.\n\n## Installation\n\n```\nnpm i --saveDev pug-plugin-ng\n```\n\n## Why does this exist?\n\nPug is great. However, online you will primarily find HTML snippets. This allows you to write element attributes in Pug as you would in HTML (without additional quotes/commas/`=''`), which can save some pain especially using Angular 2 with its directives, template variables and attribute names containing punctuation like `*ngIf=\"true\"`, `#my_var`, `[prop]=\"val\"` or `(event)=\"boom()\"`.\nIf you've ever wanted to copy HTML snippets and use them in Pug with little effort (without say [html2pug](http://html2pug.com/)), or just wanted even terser template syntax, this will help.\n\n## Sounds useful. Why isn't this the default setting in Pug?\n\nBackward compatibility. So Pug allows using JS in attribute values, and in JS an expression doesn't by definition end after a space. Technically, in `[foo]=\"val\" [bar]=\"baz\"`, JS might interpret the `[foo]=\"val\" [bar]` part as `[foo]=\"val\"[bar]`, which might yield as a value for `[foo]` the character part of string `\"val\"` at index `bar` (though it'll then error with `Assigning to rvalue` because of the following `=\"baz\"`).\n\nTo maintain consistency, Pug by default [follows JS semantics](https://github.com/pugjs/pug-lexer/pull/69#issuecomment-239973538) here. So in case you do intend to use `[foo]=\"val\" [bar]` (note the space before the `[`) as an index selector rather than as Angular 2 bindings, this will break your code.\n\n## Can I still use the awkward escaped syntax too?\n\nYep, no existing syntax has been harmed.\n\n## Usage:\n\n### With webpack + `pug-html-loader` [`^1.0.10`](https://github.com/tycho01/pug-plugin-ng/pull/3):\n\n`myComp.pug`:\n```\n.items(\n  *ngFor=\"#item of items\"\n  [ngClass]=\"{'active': isActive}\"\n)\n  p {{item}}\n```\n\n`myComp.ts`:\n```\n@Component({\n  template: require('./myComp.pug'),\n})\n```\n\nIn your `webpack.config.js` file:\n```\nmodule.exports = {\n  // your config settings ...\n  module: [\n    //your modules...\n    loaders: [\n      {\n        test: /\\.pug/,\n        loader: 'pug-html', \n        query: { doctype: 'html', plugins: ['pug-plugin-ng'] },\n      },\n    ]\n  ]\n};\n```\n\nIf you have multiple loaders chained it can be written like this.\n\n```\n      {\n        test: /\\.pug/,\n        include: helpers.root('modules'),\n        loaders: [\n          { loader: 'html', query: { root: 'images' } },\n          { loader: 'pug-html', query: { doctype: 'html', plugins: ['pug-plugin-ng'] }},\n        ]\n      },\n```\n\nNote that for Webpack 1 this requires using [`pug-ng-html-loader`](https://github.com/tycho01/pug-ng-html-loader) instead of [`pug-html-loader`](https://github.com/willyelm/pug-html-loader). The reason for this is that having to pass in a plugin (patching function) to Pug cannot be done through Webpack, as its JSON serialization strips out any functions, see [here](https://github.com/pugjs/pug-lexer/pull/69#issuecomment-241119765).\n\nWebpack 1, using `pug-ng-html-loader`:\n```\n      { test: /\\.pug$/, loader: 'pug-ng-html' },\n```\n\n### with Rollup:\n\nUse [rollup-plugin-pug](https://github.com/aMarCruz/rollup-plugin-pug) or [rollup-plugin-pug-html](https://github.com/tycho01/rollup-plugin-pug-html/) and pass `plugins: [require('pug-plugin-ng')]` as part of the Pug options.\n\n### with Gulp (e.g. for Ionic):\n```\nlet pug = require('gulp-pug');\nlet pug_plugin_ng = require('pug-plugin-ng');\nlet pug_opts = { doctype: 'html', plugins: [pug_plugin_ng] };\ngulp.task('pug', () =>\n  gulp.src('app/**/*.pug')\n  .pipe(pug(pug_opts))\n  .pipe(gulp.dest('www/build'))\n);\n\n// add pug task to your build/watch tasks, incl. a watch function like this:\ngulpWatch('src/**/*.pug', () => gulp.start('pug'));\n```\n\nSee also [this thread](https://github.com/driftyco/ionic-app-scripts/issues/31) on Ionic 2's introduction of `ionic-app-scripts` since RC, which complicates things.\n\n### Alternative: inline\n\nThis doesn't require webpack, but you want to use something like that instead. Or JSPM maybe.\n\n```\nlet pug_plugin_ng = require('pug-plugin-ng');\nlet pug = require('pug');\nlet pug_opts = { doctype: 'html', plugins: [pug_plugin_ng] };\n@Component({\n  template: pug.render('p([(banana)]=\"box\" #my_var directive) hi', pug_opts),\n})\n```\n\n## License\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tycho01/pug-plugin-ng.git"
  },
  "scripts": {
    "test": "node test/index.js"
  },
  "version": "0.0.2"
}
